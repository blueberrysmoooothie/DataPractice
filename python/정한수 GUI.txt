gui 구현 관련 설명 하게

우선 창을 만들고 그안에 menu 칸을 Frame으로 만들었습니다.

그안에 저희가 만든 4개의 기능 나타내는 버튼들을 넣어주었구요,
간단한 이미지를 메인 화면에 넣어 보았습니다.

각 버튼에는 버튼 클릭시 각 화면 객체를 인자로 받아 해당 기능 화면으로 전환 되도록 함수들을 연결 하였습니다.
함수들 내부에는 우선 기존에 다른 기능의 화면이 존재한다면, 그 화면을 제거하고 원하는 화면을 보여 주도록 하였습니다.

우선 MBTI 검사기능의 화면입니다. 

test start 버튼 위의 공간에 질문을 보여주고 left, right 버튼으로 사용자의 응답을 받아 검사를 진행합니다.

검사가 종료되면 버튼 하단의 공백에 검사를 통해 추정된 mbti 유형의 설명이 보이도록 하였습니다.

이 화면에서 세 버튼에 연결된 함수를 설명 드리면, 우선 mbtiTest class 객체로 선언된 test와 질문 출력칸, 결과 출력칸을 인자로 받습니다.
 
test start 버튼에 연결된 test_button_pushed 함수가 호출되면 선언한 객체가 검사 진행 상태로 변경되며 검사를 시작합니다.

---- 앞에 발표 보고

했으면:
	이후 검사는 앞에서 설명한 대로 진행되며 최종에는 선언해 주었던 객체안의 show_detail 함수를 통해 결과창에 결과를 보여줍니다.

다음으로 2번째 메뉴인 상세 설명 화면을 구성 하였는데 mbti 유형들을 라디오 버튼으로 만들고
버튼을 선택하면 유형의 상세 설명을 이전 기능과 마찬가지로 show_detail 함수를 통해 보여주게 됩니다.

3번째 화면은 mbti 유형간의 궁합 결과를 보여주는 화면인데

이곳에서도 라디오 버튼을 활용하여 mbti 유형을 입력 받지만 이번에는 선택한 유형이 좌측 공간에 입력됩니다.
두 공백이 모두 입력되면 MBTI 궁합 계산 버튼에 연결된 mate_pushed 함수를 통해 결과를 보여 줍니다.

mate_pushed 함수는 궁합 결과를 하트모양과 간단한 설명으로 보여주는 함수로
그림을 그릴 공간과, 설명 출력 공간, mbti 유형이 입력되어 있을 두 입력창을 인자로 받습니다.

입력창에서 두개의 mbti 유형을 읽어 오면 앞에서 설명한 대로 궁합결과를 계산하며
결과를 보여줍니다.

마지막으로 수강생들의 mbti 궁합을 알아보는 화면에서는 
이름 입력칸 두개와 입력받은 이름을 토대로 mbti 유형을 구하고
결과를 3번 메뉴와 같이 궁합 결과를 보여주도록 구성 하였습니다.

이 화면에서 궁합 계산 버튼에 연결된 함수는 입력된 이름이나 입력 되지 않았다면 
랜덤으로 추출한 이름을 통해 mbti 값을 가져와 공간을 채워주고

3번 메뉴와 같은 함수를 통해 결과를 보여주게 됩니다.

 



